library(cowplot)
library(ggcorrplot)
library(ggplot2)
library(stats)
library(cluster)
library(GGally)
library(kableExtra)
library(factoextra)
library(tidyverse)
#Load the dataset
df <- read.csv("C:\Users\soham\Documents\Github rep\6303-Final-Project\facebook+live+sellers+in+thailand\Live_20210128.csv", row.names= NULL)
#Load the dataset
df <- read.csv("C:/Users/soham/Documents/Github rep/6303-Final-Project/facebook+live+sellers+in+thailand/Live_20210128.csv", row.names= NULL)
#data view
head(df)
tail(df)
str(df)
summary(df)
#Summary Statistics for numerical features
summary(df$num_reactions)
summary(df$num_comments)
summary(df$num_shares)
#Plots
df$status_type <- factor(df$status_type, levels = c("link", "photo", "status", "video"), labels = c(1, 2, 3, 4))
# Histogram of num_reactions
plot1 <- ggplot(df, aes(x = num_reactions)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Reactions")
# Histogram of num_comments
plot2 <- ggplot(df, aes(x = num_comments)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Comments")
# Histogram of num_shares
plot3 <- ggplot(df, aes(x = num_shares)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Shares")
# Histogram of num_likes
plot4 <- ggplot(df, aes(x = num_likes)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Likes")
# Histogram of num_loves
plot5 <- ggplot(df, aes(x = num_loves)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Loves")
# Histogram of num_wows
plot6 <- ggplot(df, aes(x = num_wows)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Wows")
# Histogram of num_hahas
plot7 <- ggplot(df, aes(x = num_hahas)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Hahas")
# Histogram of num_sads
plot8 <- ggplot(df, aes(x = num_sads)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Sads")
# Histogram of num_angrys
plot9 <- ggplot(df, aes(x = num_angrys)) +
geom_histogram(binwidth = 20, fill = "skyblue", color = "black") +
labs(title = "Distribution of Number of Angrys")
# Arrange plots in a grid
plot_grid(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol = 3)
#Grouped bar plot for comparison between status_type
# Melt the data frame to long format
data_long <- reshape2::melt(df, id.vars = "status_type")
# Create a grouped bar plot
ggplot(data_long, aes(x = variable, y = value, fill = status_type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Comparison of Features for Photo and Video Types",
x = "Feature",
y = "Value") +
facet_wrap(~ variable, scales = "free_y") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Drop status_published, status_type
data_subset <- select(df, -c("status_published","status_type"))
#scatterplot matrix
pairs(data_subset)
#calculate correlation matrix
correlation_matrix <- cor(select(df, -c("status_type","status_published")))
# Plot correlation matrix
ggcorrplot(correlation_matrix, type = "lower", lab = TRUE)
#considering nu_likes and num_reactions as a datset due to high correlation
new_df <- select(data_subset, c("num_reactions", "num_likes", "num_shares",
"num_comments", "num_loves"))
#considering nu_likes and num_reactions as a datset due to high correlation
new_df <- select(data_subset, c("num_reactions", "num_likes", "num_shares",
"num_comments", "num_loves"))
#Scaling the Data
data_subset_scaled <- scale(new_df)
#Modelling
#Kmeans
#Acquiirng the the optimal number of clusters for the model using scree plot
fviz_nbclust(data_subset_scaled, kmeans, method="wss") +
geom_vline(xintercept = 4, linetype = 2)
#Kmeans model
set.seed(7894)
kmeans_model <- kmeans(data_subset_scaled, nstart=20, centers=4)
print(kmeans_model)
data_subset$cluster <- kmeans_model$cluster
pairs(data_subset_scaled[, -ncol(data_subset_scaled)],
col = kmeans_model$cluster,
pch = 16,
main = "Scatterplot Matrix with Clusters")
#Aggregating the clusters
kable(aggregate(data_subset_scaled, by=list(cluster=kmeans_model$cluster), mean),
format = "latex",
booktabs = TRUE) %>% kable_styling(position="center")
#cluster visualization
fviz_cluster(kmeans_model, data_subset_scaled)
# Calculate silhouette scores
silhouette_scores <- silhouette(kmeans_model$cluster, dist(data_subset_scaled))
print(silhouette_scores)
# Mean silhouette score
mean_silhouette_score <- mean(silhouette_scores[, "sil_width"])
print(mean_silhouette_score)
#Kmedioids
fviz_nbclust(data_subset_scaled, pam, method="wss") +
geom_vline(xintercept = 5, linetype = 2)
#Kmedioids model
set.seed(7894)
kmed_model <- pam(data_subset_scaled, k=5)
print(kmed_model)
pairs(data_subset_scaled[, -ncol(data_subset_scaled)],
col = kmed_model$cluster,
pch = 16,
main = "Scatterplot Matrix with Clusters")
